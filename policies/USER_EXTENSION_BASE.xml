<!--
  デプロイ時の手順
  - テナント名の置換:
    - B2Cテナント : yourtenant.onmicrosoft.com
  - 各IdPの固有情報（client_id等）の置換
  ※詳細な説明は以下のURLを参照
    https://github.com/ctc-selmid/platform/blob/master/Manual/aadb2c_config.md
-->
<TrustFrameworkPolicy
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
  PolicySchemaVersion="0.3.0.0"
  TenantId="yourtenant.onmicrosoft.com"
  PolicyId="B2C_1A_USER_EXTENSION_BASE"
  PublicPolicyUri="http://yourtenant.onmicrosoft.com/B2C_1A_USER_EXTENSION_BASE" >
  <BasePolicy>
    <TenantId>yourtenant.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_SELMID_EXTENSION</PolicyId>
  </BasePolicy>
  <BuildingBlocks>
    <!--
        カスタム属性を定義します
        ClaimType
            Id : 属性名を定義します。永続属性としてIDデータベースへ保存する場合は接頭辞として「extension_」をつける必要があります
        DisplayName : UIに属性を表示する場合のラベルとなる文字列を指定します
            ##TODO: 多言語の場合の定義方法の記載
        DataType : 属性値の型を指定します。
            string : 文字列
            boolean : bool値
        UserInputType : UIでユーザ自身に登録・編集を許可する場合のフォームのタイプを指定します
            TextBox : テキストボックス
    -->
    <ClaimsSchema>
      <!-- サンプル（文字列属性） -->
      <ClaimType Id="sampleStringAttribute1">
        <DisplayName>sample string attribute1</DisplayName>
        <DataType>string</DataType>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- サンプル（文字列属性） -->
      <ClaimType Id="sampleStringAttribute2">
        <DisplayName>sample string attribute2</DisplayName>
        <DataType>string</DataType>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- サンプル（Boolean属性） -->
      <ClaimType Id="sampleBooleanAttribute">
        <DisplayName>sample boolean attribute</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText />
      </ClaimType>
      <!-- サンプル（永続属性） -->
      <ClaimType Id="extension_samplePersistentAttribute">
        <DisplayName>sample persistent attribute</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
    </ClaimsSchema>
    <!--
        カスタム関数（ClaimsTransformation）を定義します
        ClaimsTransformation
            Id : 関数名を指定します
            TransformationMethod : 関数タイプを指定します
                ##TODO : 指定できる関数タイプ一覧の記載
        InputClaim : 入力属性を指定します
            ClaimTypeReferenceId : 属性名を指定します
            TransformationClaimType : 関数内で使用する属性の型を指定します
        OutputClaims : 出力属性を指定します
            ClaimTypeReferenceId : 属性名を指定します
            TransformationClaimType : 関数内で使用する属性の型を指定します
    -->
    <ClaimsTransformations>
      <!-- サンプル（文字列属性のフォーマット。入力属性にprefix_をつけて返却する） -->
      <ClaimsTransformation Id="sampleFormatTransformation" TransformationMethod="FormatStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="sampleStringAttribute1" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="prefix_{0}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="sampleStringAttribute2" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
    </ClaimsTransformations>
    <!--
        カスタムUIのテンプレートを定義します
        LoadUri : UIテンプレートを指定します
        RecoveryUri : エラー発生時のUIテンプレートを指定します
        Metadata
            DisplayName : タイトル属性に指定される値を指定します
    -->
    <ContentDefinitions>
      <!-- エラー発生時のUI  -->
      <ContentDefinition Id="api.error">
        <LoadUri>~/tenant/templates/AzureBlue/exception.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Error page</Item>
        </Metadata>
      </ContentDefinition>
      <!-- サインインするIdP選択時のUI  -->
      <ContentDefinition Id="api.idpselections">
        <LoadUri>~/tenant/templates/AzureBlue/idpSelector.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Idp selection page</Item>
        </Metadata>
      </ContentDefinition>
      <!-- サインアップするIdP選択時のUI  -->
      <ContentDefinition Id="api.idpselections.signup">
        <LoadUri>~/tenant/templates/AzureBlue/idpSelector.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Idp selection page</Item>
        </Metadata>
      </ContentDefinition>
      <!-- サインアップ/サインイン時のUI  -->
      <ContentDefinition Id="api.signuporsignin">
        <LoadUri>~/tenant/templates/AzureBlue/unified.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Signin and Signup</Item>
        </Metadata>
      </ContentDefinition>
      <!-- 属性登録時のUI  -->
      <ContentDefinition Id="api.selfasserted">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <!-- プロフィール更新時のUI  -->
      <ContentDefinition Id="api.selfasserted.profileupdate">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <!-- ローカルアカウントのサインアップ時のUI  -->
      <ContentDefinition Id="api.localaccountsignup">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Local account sign up page</Item>
        </Metadata>
        <!-- ローカライズ設定 -->
        <LocalizedResourcesReferences MergeBehavior="Prepend">
          <LocalizedResourcesReference Language="en" LocalizedResourcesReferenceId="api.localaccountsignup.en" />
          <LocalizedResourcesReference Language="ja" LocalizedResourcesReferenceId="api.localaccountsignup.ja" />
        </LocalizedResourcesReferences>
      </ContentDefinition>
      <!-- ローカルアカウントのパスワードリセット時のUI  -->
      <ContentDefinition Id="api.localaccountpasswordreset">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Local account change password page</Item>
        </Metadata>
      </ContentDefinition>
      <!-- 多要素認証時のUI  -->
      <ContentDefinition Id="api.phonefactor">
        <LoadUri>~/tenant/templates/AzureBlue/multifactor-1.0.0.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Multi-factor authentication page</Item>
        </Metadata>
      </ContentDefinition>
      <!-- ローカルアカウントでのサインイン時のUI（ログアウトしないボタン付き）  -->
      <ContentDefinition Id="api.signuporsigninwithkmsi">
        <LoadUri>~/tenant/templates/AzureBlue/unified.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <Metadata>
          <Item Key="DisplayName">Signin and Signup</Item>
        </Metadata>
      </ContentDefinition>
    </ContentDefinitions>
    <!--
        カスタムUIのローカライゼーション設定
    -->
    <Localization Enabled="true">
      <!-- サポートする言語 -->
      <SupportedLanguages DefaultLanguage="ja" MergeBehavior="ReplaceAll">
        <SupportedLanguage>en</SupportedLanguage>
        <SupportedLanguage>ja</SupportedLanguage>
      </SupportedLanguages>
      <!-- 英語 -->
      <LocalizedResources Id="api.localaccountsignup.en">
        <LocalizedStrings>
          <LocalizedString ElementType="ClaimType" ElementId="email" StringId="DisplayName">Email</LocalizedString>
          <LocalizedString ElementType="ClaimType" ElementId="email" StringId="UserHelpText">Please enter your email</LocalizedString>
          <LocalizedString ElementType="ClaimType" ElementId="email" StringId="PatternHelpText">Please enter a valid email address</LocalizedString>
          <LocalizedString ElementType="UxElement" StringId="button_continue">Create new account</LocalizedString>
          <LocalizedString ElementType="ErrorMessage" StringId="UserMessageIfClaimsPrincipalAlreadyExists">The account you are trying to create already exists, please sign-in.</LocalizedString>
        </LocalizedStrings>
      </LocalizedResources>
      <!-- 日本語 -->
      <LocalizedResources Id="api.localaccountsignup.ja">
        <LocalizedStrings>
          <LocalizedString ElementType="ClaimType" ElementId="email" StringId="DisplayName">電子メールアドレス</LocalizedString>
          <LocalizedString ElementType="ClaimType" ElementId="email" StringId="UserHelpText">電子メールアドレスを入力してください</LocalizedString>
          <LocalizedString ElementType="ClaimType" ElementId="email" StringId="PatternHelpText">正しい電子メールアドレス形式で入力してください</LocalizedString>
          <LocalizedString ElementType="UxElement" StringId="button_continue">新しいアカウントを作成する</LocalizedString>
          <LocalizedString ElementType="ErrorMessage" StringId="UserMessageIfClaimsPrincipalAlreadyExists">作成しようとしたアカウントは既に存在します。サインインしてください。</LocalizedString>
        </LocalizedStrings>
      </LocalizedResources>
    </Localization>
  </BuildingBlocks>
  <!--
      各種IdPへの接続設定
      Metadata
        client_id : 各IdPから取得したclient_idを指定します
      CryptographicKeys
        Id : client_secret
        StorageReferenceId : Azure AD B2C上に登録したポリシーキーIDを指定します
  -->
  <ClaimsProviders>
    <!-- Facebook -->
    <ClaimsProvider>
      <DisplayName>Facebook</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="Facebook-OAUTH">
          <Metadata>
            <Item Key="client_id">{your client id}</Item>
            <!-- facebookで許可するscopeを指定します -->
            <Item Key="scope">email public_profile</Item>
            <!-- scopeに合わせて取得する属性をqueryStringに指定します -->
            <Item Key="ClaimsEndpoint">https://graph.facebook.com/me?fields=id,first_name,last_name,name,email</Item>
          </Metadata>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <!-- Twitter -->
    <ClaimsProvider>
      <DisplayName>Twitter</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="Twitter-OAUTH1">
          <Metadata>
            <Item Key="client_id">{your client id}</Item>
          </Metadata>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <!-- Google -->
    <ClaimsProvider>
      <DisplayName>Google</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="Google-OAUTH">
          <Metadata>
            <Item Key="scope">email</Item>
            <Item Key="client_id">{your client id}</Item>
          </Metadata>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <!-- LINE -->
    <ClaimsProvider>
      <DisplayName>LINE</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="LINE-OIDC">
          <Metadata>
            <Item Key="client_id">{your client id}</Item>
            <!-- LINEで許可するscopeを指定します -->
            <Item Key="scope">openid profile email</Item>
          </Metadata>
          <!-- Botと友達になる場合に指定します -->
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="bot_prompt" DefaultValue="aggressive" />
          </InputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <!-- Yahoo! JAPAN -->
    <ClaimsProvider>
      <DisplayName>Yahoo! JAPAN</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="YahooJAPAN-OAUTH">
          <Metadata>
            <Item Key="client_id">{your client id}</Item>
            <!-- Yahoo! JAPANで許可するscopeを指定します -->
            <Item Key="scope">openid email profile address</Item>
          </Metadata>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <!-- Apple -->
    <ClaimsProvider>
      <DisplayName>Apple</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="Apple-OIDC">
          <Metadata>
            <Item Key="client_id">{your client id}</Item>
            <!-- Sign in with Appleで許可するscopeを指定します -->
            <Item Key="scope">name email</Item>
          </Metadata>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <!--
        Azure Actvie Directoryのデータベースとのインターフェイスするためのプロファイル（関数）定義
    -->
    <ClaimsProvider>
      <DisplayName>Azure Active Directory</DisplayName>
      <TechnicalProfiles>
        <!--
            外部IdPのユーザIDをキーにIDをAzure Active Directoryのデータベースに登録します（ソーシャルサインアップ）
        -->
        <TechnicalProfile Id="AAD-UserWriteUsingAlternativeSecurityId">
          <Metadata>
            <!--
                既にユーザが登録されていた場合のエラーメッセージ
            -->
            <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered, please press the back button and sign in instead.</Item>
          </Metadata>
          <PersistedClaims>
            <!-- 永続させる属性を指定します -->
            <PersistedClaim ClaimTypeReferenceId="otherMails" />
            <PersistedClaim ClaimTypeReferenceId="givenName" />
            <PersistedClaim ClaimTypeReferenceId="surname" />
          </PersistedClaims>
          <OutputClaims>
            <!-- 登録後、後続のステップに対して出力する属性を指定します -->
          </OutputClaims>
        </TechnicalProfile>
        <!--
            外部IdPのユーザIDをキーに属性情報をAzure Active Directoryのデータベースから取得します
        -->
        <TechnicalProfile Id="AAD-UserReadUsingAlternativeSecurityId">
          <Metadata>
            <!--
                ユーザが登録されていなかった場合のエラーメッセージ
            -->
            <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">User does not exist. Please sign up before you can sign in.</Item>
          </Metadata>
          <OutputClaims>
            <!-- データベースから取得して後続のステップに対して出力する属性を指定します -->
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="otherMails" />
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surname" />
          </OutputClaims>
        </TechnicalProfile>
        <!--
            EメールアドレスをキーにIDをAzure Active Directoryのデータベースへ登録します（ローカルサインアップ）
        -->
        <TechnicalProfile Id="AAD-UserWriteUsingLogonEmail">
          <Metadata>
            <!--
                既にユーザが登録されていた場合のエラーメッセージ
            -->
            <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered, please press the back button and sign in instead.</Item>
          </Metadata>
          <PersistedClaims>
            <!-- 永続させる属性を指定します -->
            <PersistedClaim ClaimTypeReferenceId="givenName" />
            <PersistedClaim ClaimTypeReferenceId="surname" />
          </PersistedClaims>
          <OutputClaims>
            <!-- 登録後、後続のステップに対して出力する属性を指定します -->
          </OutputClaims>
        </TechnicalProfile>
        <!--
            Eメールアドレスをキーに属性情報をAzure Active Directoryのデータベースから取得します
        -->
        <TechnicalProfile Id="AAD-UserReadUsingEmailAddress">
          <Metadata>
            <!--
                ユーザが登録されていなかった場合のエラーメッセージ
            -->
            <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">An account could not be found for the provided user ID.</Item>
          </Metadata>
          <OutputClaims>
            <!-- データベースから取得して後続のステップに対して出力する属性を指定します -->
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="accountEnabled" />
            <OutputClaim ClaimTypeReferenceId="otherMails" />
            <OutputClaim ClaimTypeReferenceId="signInNames.emailAddress" />
          </OutputClaims>
        </TechnicalProfile>
        <!--
            objectIdをキーに属性情報をAzure Active Directoryのデータベースへ登録します
        -->
        <TechnicalProfile Id="AAD-UserWriteProfileUsingObjectId">
          <Metadata>
            <!--
                ユーザが登録されていなかった場合のエラーメッセージ
            -->
            <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">An account could not be found for the provided user ID.</Item>
          </Metadata>
          <PersistedClaims>
            <!-- 永続させる属性を指定します -->
            <PersistedClaim ClaimTypeReferenceId="givenName" />
            <PersistedClaim ClaimTypeReferenceId="surname" />
          </PersistedClaims>
        </TechnicalProfile>
        <!--
            objectIdをキーに属性情報をAzure Active Directoryのデータベースから取得します
        -->
        <TechnicalProfile Id="AAD-UserReadUsingObjectId">
          <Metadata>
            <!--
                ユーザが登録されていなかった場合のエラーメッセージ
            -->
            <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">An account could not be found for the provided objectId.</Item>
          </Metadata>
          <OutputClaims>
            <!-- データベースから取得して後続のステップに対して出力する属性を指定します -->
            <OutputClaim ClaimTypeReferenceId="signInNames.emailAddress" />
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="otherMails" />
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surname" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <!--
        ユーザ自身で手動で登録する属性のためのプロファイル（関数）定義
    -->
    <ClaimsProvider>
      <DisplayName>Self Asserted</DisplayName>
      <TechnicalProfiles>
        <!--
            ソーシャルサインアップの際に手動で登録を求める属性の定義
        -->
        <TechnicalProfile Id="SelfAsserted-Social">
          <Metadata>
            <!-- UI定義 -->
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
          </Metadata>
          <InputClaims>
            <!-- 外部IdPから取得して初期値を表示する属性（取得できた場合） -->
            <InputClaim ClaimTypeReferenceId="displayName" />
            <InputClaim ClaimTypeReferenceId="givenName" />
            <InputClaim ClaimTypeReferenceId="surname" />
          </InputClaims>
          <OutputClaims>
            <!-- ユーザが手動で登録/編集することが出来る属性 -->
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surname" />
          </OutputClaims>
        </TechnicalProfile>
        <!--
            プロファイル編集の際に手動で登録を求める属性の定義
        -->
        <TechnicalProfile Id="SelfAsserted-ProfileUpdate">
          <Metadata>
            <!-- UI定義 -->
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.profileupdate</Item>
          </Metadata>
          <InputClaims>
            <!-- 現在の値をデータベースから取得して表示する属性 -->
            <InputClaim ClaimTypeReferenceId="givenName" />
            <InputClaim ClaimTypeReferenceId="surname" />
          </InputClaims>
          <OutputClaims>
            <!-- ユーザが手動で登録/編集することが出来る属性 -->
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surname" />
          </OutputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <!--
        Local Account(Azure Active Directory/Password Grant)
    -->
    <ClaimsProvider>
      <DisplayName>Local Account SignIn</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="login-NonInteractive">
          <OutputClaims>
            <!-- Azure Active Directoryのデータベースより取得する属性を指定します -->
            <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
            <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name" />
            <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
          </OutputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <!--
      Local Accountのサインアップ/サインイン
    -->
    <ClaimsProvider>
      <DisplayName>Local Account</DisplayName>
      <TechnicalProfiles>
        <!--
            メールアドレスを使ったローカルアカウントのサインアップ
        -->
        <TechnicalProfile Id="LocalAccountSignUpWithLogonEmail">
          <Metadata>
            <!-- UI定義 -->
            <Item Key="ContentDefinitionReferenceId">api.localaccountsignup</Item>
          </Metadata>
          <OutputClaims>
            <!-- 手動登録させる属性 -->
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surName" />
          </OutputClaims>
        </TechnicalProfile>
        <!--
            メールアドレスを使ったローカルアカウントのサインイン
        -->
        <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email">
          <Metadata>
            <!-- ログインIDに使う属性/メールアドレス -->
            <Item Key="setting.operatingMode">Email</Item>
            <!-- UI定義 -->
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
          </Metadata>
        </TechnicalProfile>
        <!--
            メールアドレスを使ったパスワードリセット
        -->
        <TechnicalProfile Id="LocalAccountDiscoveryUsingEmailAddress">
          <Metadata>
            <!-- UI定義 -->
            <Item Key="ContentDefinitionReferenceId">api.localaccountpasswordreset</Item>
            <!-- ロックアウトされている時のエラーメッセージ -->
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Your account has been locked. Contact your support person to unlock it, then try again.</Item>
          </Metadata>
        </TechnicalProfile>
        <!--
            objectIdをキーとしたパスワード変更
        -->
        <TechnicalProfile Id="LocalAccountWritePasswordUsingObjectId">
          <Metadata>
            <!-- UI定義 -->
            <Item Key="ContentDefinitionReferenceId">api.localaccountpasswordreset</Item>
          </Metadata>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
  </ClaimsProviders>
</TrustFrameworkPolicy>